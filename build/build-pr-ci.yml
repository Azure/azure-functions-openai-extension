variables:
  config: Release
  fakeWebJobsPackageVersion: 99.99.99-test

pr:
  branches:
    include:
      - main
  paths:
    exclude:
      - '**.md'

trigger:
  branches:
    include:
      - main
  paths:
    exclude:
      - '**.md'

continueOnError: false
pool:
  vmImage: 'ubuntu-latest'

steps:
  - task: UseDotNet@2
    displayName: 'Install .NET Core SDK 6 LTS'
    inputs:
      version: '6.x'

  - task: UseDotNet@2
    displayName: 'Install .NET Core SDK 8 LTS'
    inputs:
      version: '8.x'

  - task: DockerInstaller@0
    inputs:
      dockerVersion: '25.0.3'

  - script: docker build -f samples/chat/csharp-ooproc/Dockerfile -t openai-func-sample-csharp-ooproc .
    displayName: Docker Build - Chat Bot Sample Out of Proc

  - script: docker run -d -p 10000:10000 -p 10001:10001 -p 10002:10002 mcr.microsoft.com/azure-storage/azurite
    displayName: Docker Run - Azurite

  - script: |
      docker run -d -p 7071:80 --name openai-func-sample-csharp-ooproc \
            --add-host host.docker.internal:host-gateway \
            --env AZURE_OPENAI_KEY=$(AZURE_OPENAI_KEY) \
            --env AZURE_OPENAI_ENDPOINT=$(AZURE_OPENAI_ENDPOINT) \
            --env CHAT_MODEL_DEPLOYMENT_NAME=$(AZURE_DEPLOYMENT_NAME) \
            --env 'AzureWebJobsStorage=UseDevelopmentStorage=true;DevelopmentStorageProxyUri=http://host.docker.internal' \
            openai-func-sample-csharp-ooproc
    displayName: Docker Run - Chat Bot Sample Out of Proc

  - script: sleep 10s
    displayName: Sleep for 10 seconds

  - script: mkdir ~/NuGetPackagesLocal
    displayName: Create new directory

  - script: |
      dotnet build $(System.DefaultWorkingDirectory)/src/WebJobs.Extensions.OpenAI/WebJobs.Extensions.OpenAI.csproj --configuration $(config) -p:WebJobsVersion=$(fakeWebJobsPackageVersion) -p:Version=$(fakeWebJobsPackageVersion) -p:AzureAISearchVersion=$(fakeWebJobsPackageVersion) -p:KustoVersion=$(KustoVersion)
      dotnet build $(System.DefaultWorkingDirectory)/src/WebJobs.Extensions.OpenAI.Kusto/WebJobs.Extensions.OpenAI.Kusto.csproj --configuration $(config) -p:Version=$(fakeWebJobsPackageVersion) -p:AzureAISearchVersion=$(fakeWebJobsPackageVersion) -p:KustoVersion=$(KustoVersion)
      dotnet build $(System.DefaultWorkingDirectory)/src/WebJobs.Extensions.OpenAI.AzureAISearch/WebJobs.Extensions.OpenAI.AzureAISearch.csproj --configuration $(config) -p:Version=$(fakeWebJobsPackageVersion) -p:AzureAISearchVersion=$(fakeWebJobsPackageVersion) -p:KustoVersion=$(KustoVersion)
      sudo cp "$(System.DefaultWorkingDirectory)/src/WebJobs.Extensions.OpenAI/bin/Release/Microsoft.Azure.WebJobs.Extensions.OpenAI.$(fakeWebJobsPackageVersion).nupkg" ~/NuGetPackagesLocal
      sudo cp "$(System.DefaultWorkingDirectory)/src/WebJobs.Extensions.OpenAI.AzureAISearch/bin/Release/Microsoft.Azure.WebJobs.Extensions.OpenAI.AzureAISearch.$(fakeWebJobsPackageVersion).nupkg" ~/NuGetPackagesLocal
      sudo cp "$(System.DefaultWorkingDirectory)/src/WebJobs.Extensions.OpenAI.Kusto/bin/Release/Microsoft.Azure.WebJobs.Extensions.OpenAI.Kusto.$(fakeWebJobsPackageVersion).nupkg" ~/NuGetPackagesLocal

      sleep 10s
      
      ls ~/../../etc
       ls ~/../../opt


      dotnet nuget add source ~/NuGetPackagesLocal --configfile ~/../../opt/NuGet/Config
      dotnet nuget list source

      sleep 10s

      dotnet build --configuration $(config) /p:WebJobsVersion=$(fakeWebJobsPackageVersion) /p:Version=$(fakeWebJobsPackageVersion) /p:AzureAISearchVersion=$(fakeWebJobsPackageVersion) /p:KustoVersion=$(fakeWebJobsPackageVersion)
    displayName: Create/Copy NuGet Package to local directory and Build

  - script: dotnet test --configuration $(config) --no-build --verbosity normal
    displayName: E2E Test - Chat Bot Sample Out of Proc

  - script: docker logs openai-func-sample-csharp-ooproc
    displayName: Print Docker Logs - Chat Bot Sample Out of Proc
    condition: always()
