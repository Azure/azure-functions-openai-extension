jobs:
  - job: Build
    steps:
      - task: UseDotNet@2
        displayName: 'Install .NET Core SDK 6 LTS'
        inputs:
          version: '6.x'

      - task: UseDotNet@2
        displayName: 'Install .NET Core SDK 8 LTS'
        inputs:
          version: '8.x'

      - script: |
          mkdir "$(System.DefaultWorkingDirectory)/NuGetPackagesLocal"
        displayName: Create new directory

      - script: |
          dotnet build $(System.DefaultWorkingDirectory)/src/WebJobs.Extensions.OpenAI/WebJobs.Extensions.OpenAI.csproj --configuration $(config) -p:WebJobsVersion=$(fakeWebJobsPackageVersion) -p:Version=$(fakeWebJobsPackageVersion) -p:AzureAISearchVersion=$(fakeWebJobsPackageVersion) -p:KustoVersion=$(fakeWebJobsPackageVersion)
          dotnet build $(System.DefaultWorkingDirectory)/src/WebJobs.Extensions.OpenAI.Kusto/WebJobs.Extensions.OpenAI.Kusto.csproj --configuration $(config) -p:Version=$(fakeWebJobsPackageVersion) -p:AzureAISearchVersion=$(fakeWebJobsPackageVersion) -p:KustoVersion=$(fakeWebJobsPackageVersion)
          dotnet build $(System.DefaultWorkingDirectory)/src/WebJobs.Extensions.OpenAI.AzureAISearch/WebJobs.Extensions.OpenAI.AzureAISearch.csproj --configuration $(config) -p:Version=$(fakeWebJobsPackageVersion) -p:AzureAISearchVersion=$(fakeWebJobsPackageVersion)
          dotnet build $(System.DefaultWorkingDirectory)/src/WebJobs.Extensions.OpenAI.CosmosDBSearch/WebJobs.Extensions.OpenAI.CosmosDBSearch.csproj --configuration $(config) -p:Version=$(fakeWebJobsPackageVersion) -p:CosmosDBSearchVersion=$(fakeWebJobsPackageVersion)
          dotnet build $(System.DefaultWorkingDirectory)/src/WebJobs.Extensions.OpenAI.CosmosDBNoSqlSearch/WebJobs.Extensions.OpenAI.CosmosDBNoSqlSearch.csproj --configuration $(config) -p:Version=$(fakeWebJobsPackageVersion) -p:CosmosDBNoSqlSearchVersion=$(fakeWebJobsPackageVersion)
        displayName: Dotnet Build WebJobs.Extensions.OpenAI

      - task: CopyFiles@2
        displayName: 'Copy NuGet WebJobs.Extensions.OpenAI to local directory'
        inputs:
          SourceFolder: '$(System.DefaultWorkingDirectory)/src/WebJobs.Extensions.OpenAI/bin/Release/'
          Contents: 'Microsoft.Azure.WebJobs.Extensions.OpenAI.$(fakeWebJobsPackageVersion).nupkg'
          TargetFolder: '$(System.DefaultWorkingDirectory)/NuGetPackagesLocal'

      - task: CopyFiles@2
        displayName: 'Copy NuGet WebJobs.Extensions.OpenAI.AzureAISearch to local directory'
        inputs:
          SourceFolder: '$(System.DefaultWorkingDirectory)/src/WebJobs.Extensions.OpenAI.AzureAISearch/bin/Release/'
          Contents: 'Microsoft.Azure.WebJobs.Extensions.OpenAI.AzureAISearch.$(fakeWebJobsPackageVersion).nupkg'
          TargetFolder: '$(System.DefaultWorkingDirectory)/NuGetPackagesLocal'

      - task: CopyFiles@2
        displayName: 'Copy NuGet WebJobs.Extensions.OpenAI.Kusto to local directory'
        inputs:
          SourceFolder: '$(System.DefaultWorkingDirectory)/src/WebJobs.Extensions.OpenAI.Kusto/bin/Release/'
          Contents: 'Microsoft.Azure.WebJobs.Extensions.OpenAI.Kusto.$(fakeWebJobsPackageVersion).nupkg'
          TargetFolder: '$(System.DefaultWorkingDirectory)/NuGetPackagesLocal'

      - task: CopyFiles@2
        displayName: 'Copy NuGet WebJobs.Extensions.OpenAI.CosmosDBSearch to local directory'
        inputs:
          SourceFolder: '$(System.DefaultWorkingDirectory)/src/WebJobs.Extensions.OpenAI.CosmosDBSearch/bin/Release/'
          Contents: 'Microsoft.Azure.WebJobs.Extensions.OpenAI.CosmosDBSearch.$(fakeWebJobsPackageVersion).nupkg'
          TargetFolder: '$(System.DefaultWorkingDirectory)/NuGetPackagesLocal'

      - script: |
          dir '$(System.DefaultWorkingDirectory)/NuGetPackagesLocal'
          dotnet nuget add source $(System.DefaultWorkingDirectory)/NuGetPackagesLocal --configfile  %appdata%/NuGet/NuGet.Config
          dotnet nuget list source --configfile  %appdata%/NuGet/NuGet.Config
          dotnet build --configuration $(config) /p:WebJobsVersion=$(fakeWebJobsPackageVersion) /p:Version=$(fakeWebJobsPackageVersion) /p:AzureAISearchVersion=$(fakeWebJobsPackageVersion) /p:KustoVersion=$(fakeWebJobsPackageVersion) --configfile %appdata%/NuGet/NuGet.Config
        displayName: Build from local NuGet packages
